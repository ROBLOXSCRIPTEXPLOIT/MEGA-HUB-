local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()
local Players = game:GetService("Players")
local LP = Players.LocalPlayer
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local Humanoid = LP.Character and LP.Character:FindFirstChildOfClass("Humanoid")
local RootPart = LP.Character and LP.Character:FindFirstChild("HumanoidRootPart")
local selectedPlayer

local Window = OrionLib:MakeWindow({
    Name = "Murder Mystery 2",
    HidePremium = false,
    IntroText = "MEGA HUB",
    SaveConfig = true,
    ConfigFolder = "MM2Config"
})

-- Tabs and Sections
local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local EspTab = Window:MakeTab({
    Name = "ESP",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local TpTab = Window:MakeTab({
    Name = "Teleport",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local EmoteTab = Window:MakeTab({
    Name = "Emotes",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local RolesTab = Window:MakeTab({
    Name = "Roles",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local AutoFarmTab = Window:MakeTab({
    Name = "AutoFarm",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Main Tab Features
MainTab:AddToggle({
    Name = "CTRL click tp",
    Default = false,
    Callback = function(state)
        getgenv().ClickTP = state
    end
})

MainTab:AddSlider({
    Name = "WalkSpeed",
    Min = 16,
    Max = 200,
    Default = 16,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "WalkSpeed",
    Callback = function(value)
        getgenv().WS = tonumber(value)
        if Humanoid then
            Humanoid.WalkSpeed = value
        end
    end
})

MainTab:AddSlider({
    Name = "JumpPower",
    Min = 50,
    Max = 200,
    Default = 50,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "JumpPower",
    Callback = function(value)
        getgenv().JP = tonumber(value)
        if Humanoid then
            Humanoid.JumpPower = value
        end
    end
})

MainTab:AddToggle({
    Name = "Fly",
    Default = false,
    Callback = function(state)
        getgenv().Flying = state
        if getgenv().Flying then
            StartFly()
        else
            EndFly()
        end
    end
})

MainTab:AddSlider({
    Name = "Fly Speed",
    Min = 20,
    Max = 150,
    Default = 50,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "FlySpeed",
    Callback = function(value)
        getgenv().FlySpeed = tonumber(value)
    end
})

MainTab:AddButton({
    Name = "Btools",
    Callback = function()
        if not LP.Backpack:FindFirstChildOfClass("HopperBin") then
            for _, toolType in pairs({"Clone", "GameTool", "Hammer", "Script", "Grab"}) do
                local tool = Instance.new("HopperBin", LP.Backpack)
                tool.BinType = toolType
            end
        end
    end
})

MainTab:AddButton({
    Name = "Godmode",
    Callback = function()
        GodMode()
    end
})

MainTab:AddButton({
    Name = "Force Respawn",
    Callback = function()
        LP.Character:BreakJoints()
        Humanoid.BreakJointsOnDeath = false
    end
})

MainTab:AddButton({
    Name = "Get All Emotes",
    Callback = function()
        require(EmoteModule).GeneratePage(EmoteList, Emotes, 'Free Emotes')
    end
})

-- ESP Tab Features
EspTab:AddToggle({
    Name = "Player ESP",
    Default = false,
    Callback = function(state)
        getgenv().AllEsp = state
        for _, v in pairs(folder:GetChildren()) do
            if v:IsA("BillboardGui") and Players[v.Name] then
                v.Enabled = getgenv().AllEsp
            end
        end
    end
})

EspTab:AddToggle({
    Name = "Murderer ESP",
    Default = false,
    Callback = function(state)
        getgenv().MurderEsp = state
        while getgenv().MurderEsp do
            wait()
            for _, v in pairs(folder:GetChildren()) do
                if v:IsA("BillboardGui") and Players[v.Name] then
                    if Players[v.Name].Character:FindFirstChild("Knife") or Players[v.Name].Backpack:FindFirstChild("Knife") then
                        v.Enabled = getgenv().MurderEsp
                    end
                end
            end
        end
    end
})

EspTab:AddToggle({
    Name = "Sheriff ESP",
    Default = false,
    Callback = function(state)
        getgenv().SheriffEsp = state
        while getgenv().SheriffEsp do
            wait()
            for _, v in pairs(folder:GetChildren()) do
                if v:IsA("BillboardGui") and Players[v.Name] then
                    if Players[v.Name].Character:FindFirstChild("Gun") or Players[v.Name].Backpack:FindFirstChild("Gun") then
                        v.Enabled = getgenv().SheriffEsp
                    end
                end
            end
        end
    end
})

EspTab:AddToggle({
    Name = "Xray",
    Default = false,
    Callback = function(state)
        getgenv().Xray = state
        if getgenv().Xray then
            XrayOn(Workspace)
        else
            XrayOff(Workspace)
        end
    end
})

EspTab:AddButton({
    Name = "Unlock Workspace",
    Callback = function()
        unlock(Workspace)
    end
})

-- Teleport Tab Features
local TeleportTable = {"Lobby", "Map"}
local TeleportDict = {
    Lobby = Vector3.new(0, 0, 0),
    Map = Vector3.new(100, 100, 100)
}

TpTab:AddDropdown({
    Name = "Teleports",
    Default = "Lobby",
    Options = TeleportTable,
    Callback = function(val)
        if val == "Map" then
            for _, child in pairs(Workspace:GetDescendants()) do
                if child:IsA("BasePart") and child.Name == "Coin_Server" then
                    RootPart.CFrame = CFrame.new(child.Parent.Parent.Map:FindFirstChild("Part").Position)
                end
            end
        else
            RootPart.CFrame = CFrame.new(TeleportDict[val])
        end
    end
})

local function updatePlayerList()
    local playerList = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LP then
            table.insert(playerList, player.Name)
        end
    end
    return playerList
end

local playerDropdown = TpSection:AddDropdown({
    Name = "Select Player",
    Options = updatePlayerList(),
    Callback = function(selected)
        selectedPlayer = Players:FindFirstChild(selected)
    end
})

local function refreshDropdown(dropdown)
    dropdown:UpdateOptions(updatePlayerList())
end

Players.PlayerAdded:Connect(function()
    refreshDropdown(playerDropdown)
end)

Players.PlayerRemoving:Connect(function()
    refreshDropdown(playerDropdown)
end)

TpSection:AddButton({
    Name = "Kill Player",
    Callback = function()
        if selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("Humanoid") then
            selectedPlayer.Character.Humanoid.Health = 0
            print("Killed " .. selectedPlayer.Name)
        else
            print("No player selected or player not available.")
        end
    end
})

TpSection:AddButton({
    Name = "Fling",
    Callback = function()
        if selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local humanoidRootPart = selectedPlayer.Character.HumanoidRootPart
            local bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.Velocity = Vector3.new(0, 1000, 0)
            bodyVelocity.P = 1250
            bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
            bodyVelocity.Parent = humanoidRootPart

            game:GetService("Debris"):AddItem(bodyVelocity, 0.1)
            print("Flinged " .. selectedPlayer.Name)
        else
            print("No player selected or player not available.")
        end
    end
})

-- AutoFarm Tab Features
AutoFarmTab:AddToggle({
    Name = "Autofarm",
    Default = false,
    Callback = function(state)
        getgenv().Autofarm = state
        if getgenv().AutofarmMethod == "Coins" then
            while getgenv().Autofarm do
                wait()
                local CoinContainer = Workspace:FindFirstChild("CoinContainer", true)
                if CoinContainer and LP.PlayerGui.MainGUI.Game.CashBag.Visible then
                    local coin = CoinContainer:FindFirstChild("Coin_Server")
                    if coin then
                        repeat
                            RootPart.CFrame = CFrame.new(coin.Position - Vector3.new(0, 2.5, 0)) * CFrame.Angles(0, 0, math.rad(180))
                            RunService.Stepped:Wait()
                        until not coin:IsDescendantOf(Workspace) or coin.Name ~= "Coin_Server"
                        wait(1.8)
                    end
                else
                    wait(1.5)
                end
            end
        else
            while getgenv().Autofarm do
                wait()
                if LP.PlayerGui.MainGUI.Game.CashBag.Visible then
                    RootPart.CFrame = CFrame.new(TeleportDict["Lobby"])
                end
            end
        end
    end
})

AutoFarmTab:AddDropdown({
    Name = "Autofarm Method",
    Default = "XP",
    Options = {"XP", "Coins"},
    Callback = function(val)
        getgenv().AutofarmMethod = val
    end
})

-- Roles Tab Features
RolesTab:AddToggle({
    Name = "Silent Aim",
    Default = false,
    Callback = function(state)
        getgenv().SheriffAim = state
    end
})

RolesTab:AddSlider({
    Name = "Accuracy",
    Min = 0,
    Max = 100,
    Default = 25,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Accuracy",
    Callback = function(value)
        getgenv().GunAccuracy = tonumber(value) or 25
    end
})

RolesTab:AddToggle({
    Name = "Gun ESP",
    Default = false,
    Callback = function(state)
        getgenv().GunESP = state
    end
})

-- Auto-Shoot Features
local isAutoShootEnabled = false
local autoShootConnection

local function isSheriff()
    return LP:FindFirstChild("Role") and LP.Role.Value == "Sheriff"
end

local function findMurderer()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LP and player:FindFirstChild("Role") and player.Role.Value == "Murderer" then
            return player
        end
    end
    return nil
end

local function shootMurderer()
    if not isSheriff() then return end
    local murderer = findMurderer()
    if murderer then
        -- Replace with your own shooting mechanism
        LP.Character.HumanoidRootPart.CFrame = murderer.Character.HumanoidRootPart.CFrame
        wait(0.1)  -- Adjust timing as needed
        local gun = LP.Character:FindFirstChild("Gun")
        if gun then
            gun:Fire()
        end
    end
end

local function toggleAutoShoot(state)
    isAutoShootEnabled = state
    if isAutoShootEnabled then
        autoShootConnection = RunService.RenderStepped:Connect(function()
            shootMurderer()
        end)
        OrionLib:MakeNotification({
            Name = "Auto-Shoot Enabled",
            Content = "Auto-shoot is now enabled.",
            Time = 5
        })
    else
        if autoShootConnection then
            autoShootConnection:Disconnect()
        end
        OrionLib:MakeNotification({
            Name = "Auto-Shoot Disabled",
            Content = "Auto-shoot is now disabled.",
            Time = 5
        })
    end
end

RolesTab:AddToggle({
    Name = "Auto-Shoot",
    Default = false,
    Callback = function(state)
        toggleAutoShoot(state)
    end
})

OrionLib:Init()