local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/thanhdat4461/OrionMoblie/main/source')))()

local Window = OrionLib:MakeWindow({
    Name = "MEGA HUB V1-MURDER MYSTERY 2",
    HidePremium = false,
    IntroText = "MEGA HUB",
    SaveConfig = true,
    ConfigFolder = "MEGA MAIN"
})

OrionLib:MakeNotification({
    Name = "WELCOME!",
    Content = "THANK YOU FOR SUPPORTING MEGA HUB",
    Image = "rbxassetid://4483345998",
    Time = 8
})

OrionLib:MakeNotification({
    Name = "COPIED TO CLIPBOARD!",
    Content = "INVALID DISCORD!",
    Image = "rbxassetid://4483345998",
    Time = 8
})

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local LP = Players.LocalPlayer
local Workspace = game:GetService("Workspace")
local Humanoid = LP.Character:FindFirstChildWhichIsA("Humanoid")
local RootPart = LP.Character:FindFirstChild("HumanoidRootPart")
local infjumpenabled = false

local clientTab = Window:MakeTab({
    Name = "CLIENT",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Section = clientTab:AddSection({
    Name = "PLAYER"
})

setclipboard("")

clientTab:AddSlider({
    Name = "WalkSpeed",
    Min = 16,
    Max = 200,
    Default = 16,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "WalkSpeed",
    Callback = function(value)
        getgenv().WS = tonumber(value)
        if Humanoid then
            Humanoid.WalkSpeed = value
        end
    end    
})

clientTab:AddSlider({
    Name = "JumpPower",
    Min = 50,
    Max = 200,
    Default = 50,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "JumpPower",
    Callback = function(value)
        getgenv().JP = tonumber(value)
        if Humanoid then
            Humanoid.JumpPower = value
        end
    end    
})

clientTab:AddButton({
    Name = "RESPAWN!",
    Callback = function()
        LP.Character:BreakJoints()
        Humanoid.BreakJointsOnDeath = false
    end
})

clientTab:AddToggle({
    Name = "INFINITE JUMP",
    Default = false,
    Callback = function(value)
        infjumpenabled = value
        if infjumpenabled then
            OrionLib:MakeNotification({
                Name = "Infinite Jump Enabled",
                Content = "INFINITE JUMP ENABLED",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        else
            OrionLib:MakeNotification({
                Name = "Infinite Jump Disabled",
                Content = "INFINITE JUMP DISABLED",
                Image = "rbxassetid://4483345998",
                Time = 5
            })
        end
    end
})

UserInputService.JumpRequest:Connect(function()
    if infjumpenabled then
        local humanoid = LP.Character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid:ChangeState("Jumping")
        end
    end
end)

clientTab:AddButton({
    Name = "Godmode",
    Callback = function()
        GodMode()
    end
})

local trollTab = Window:MakeTab({
    Name = "TROLL",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Section = trollTab:AddSection({
    Name = "TARGET"
})

local function updatePlayerList()
    local playerList = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LP then
            table.insert(playerList, player.Name)
        end
    end
    return playerList
end

local selectedPlayer = nil
local playerDropdown = trollTab:AddDropdown({
    Name = "Select Player",
    Options = updatePlayerList(),
    Callback = function(selected)
        selectedPlayer = Players:FindFirstChild(selected)
    end
})

Players.PlayerAdded:Connect(function()
    playerDropdown:Refresh(updatePlayerList())
end)

Players.PlayerRemoving:Connect(function()
    playerDropdown:Refresh(updatePlayerList())
end)

trollTab:AddButton({
    Name = "Kill Player",
    Callback = function()
        if selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("Humanoid") then
            selectedPlayer.Character.Humanoid.Health = 0
            print("Killed " .. selectedPlayer.Name)
        else
            print("No player selected or player not available.")
        end
    end
})

trollTab:AddButton({
    Name = "Fling",
    Callback = function()
        if selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local humanoidRootPart = selectedPlayer.Character.HumanoidRootPart
            local bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.Velocity = Vector3.new(0, 1000, 0)
            bodyVelocity.P = 1250
            bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
            bodyVelocity.Parent = humanoidRootPart

            game:GetService("Debris"):AddItem(bodyVelocity, 0.1)
            print("Flinged " .. selectedPlayer.Name)
        else
            print("No player selected or player not available.")
        end
    end
})

local teleportTab = Window:MakeTab({
    Name = "TELEPORT",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local TeleportTable = {"Lobby", "Map"}
local TeleportDict = {
    Lobby = Vector3.new(0, 0, 0),
    Map = Vector3.new(100, 100, 100)
}

teleportTab:AddDropdown({
    Name = "Teleports",
    Default = "Lobby",
    Options = TeleportTable,
    Callback = function(val)
        if val == "Map" then
            for _, child in pairs(Workspace:GetDescendants()) do
                if child:IsA("BasePart") and child.Name == "Coin_Server" then
                    RootPart.CFrame = CFrame.new(child.Parent.Parent.Map:FindFirstChild("Part").Position)
                end
            end
        else
            RootPart.CFrame = CFrame.new(TeleportDict[val])
        end
    end
})

teleportTab:AddButton({
    Name = "Teleport",
    Callback = function()
        if selectedPlayer then
            LP.Character.HumanoidRootPart.CFrame = selectedPlayer.Character.HumanoidRootPart.CFrame
            print("Teleported to " .. selectedPlayer.Name)
        else
            print("No player selected.")
        end
    end
})

local espTab = Window:MakeTab({
    Name = "ESP",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Section = espTab:AddSection({
    Name = "ESP"
})

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ESPEnabled = false
local roles

-- > Functions < --

function CreateHighlight()
    for i, v in pairs(Players:GetPlayers()) do
        if v ~= LP and v.Character and not v.Character:FindFirstChildOfClass("Highlight") then
            local highlight = Instance.new("Highlight", v.Character)
            highlight.FillColor = Color3.fromRGB(0, 255, 0) -- Default color
        end
    end
end

function UpdateHighlights()
    for _, v in pairs(Players:GetPlayers()) do
        if v ~= LP and v.Character and v.Character:FindFirstChildOfClass("Highlight") then
            local highlight = v.Character:FindFirstChildOfClass("Highlight")
            if v.Name == Murder and IsAlive(v) then
                highlight.FillColor = Color3.fromRGB(255, 0, 0) -- Red for Murderer
            elseif v.Name == Sheriff and IsAlive(v) then
                highlight.FillColor = Color3.fromRGB(0, 0, 255) -- Blue for Sheriff
            elseif v.Name == Hero and IsAlive(v) and not IsAlive(game.Players[Sheriff]) then
                highlight.FillColor = Color3.fromRGB(255, 255, 0) -- Yellow for Hero
            else
                highlight.FillColor = Color3.fromRGB(0, 255, 0) -- Green for others
            end
        end
    end
end    

function IsAlive(player)
    local playerData = roles[player.Name]
    if playerData and not playerData.Killed and not playerData.Dead then
        return true
    end
    return false
end

function StartESP()
    ESPEnabled = true
    CreateHighlight()
    RunService.RenderStepped:Connect(function()
        if ESPEnabled then
            roles = ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
            for i, v in pairs(roles) do
                if v.Role == "Murderer" then
                    Murder = i
                elseif v.Role == 'Sheriff' then
                    Sheriff = i
                elseif v.Role == 'Hero' then
                    Hero = i
                end
            end
            UpdateHighlights()
        end
    end)
end

function StopESP()
    ESPEnabled = false
    for _, v in pairs(Players:GetPlayers()) do
        if v.Character and v.Character:FindFirstChildOfClass("Highlight") then
            v.Character:FindFirstChildOfClass("Highlight"):Destroy()
        end
    end
end

espTab:AddToggle({
    Name = "ESP PLAYER",
    Default = false,
    Callback = function(value)
        if value then
            StartESP()
        else
            StopESP()
        end
    end
})

local autofarmTab = Window:MakeTab({
    Name = "AUTOFARM",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Section = autofarmTab:AddSection({
    Name = "FARM"
})

autofarmTab:AddToggle({
    Name = "Autofarm",
    Default = false,
    Callback = function(state)
        getgenv().Autofarm = state
        if getgenv().AutofarmMethod == "Coins" then
            while getgenv().Autofarm do
                wait()
                local CoinContainer = Workspace:FindFirstChild("CoinContainer", true)
                if CoinContainer and LP.PlayerGui.MainGUI.Game.CashBag.Visible then
                    local coin = CoinContainer:FindFirstChild("Coin_Server")
                    if coin then
                        repeat
                            RootPart.CFrame = CFrame.new(coin.Position - Vector3.new(0, 2.5, 0)) * CFrame.Angles(0, 0, math.rad(180))
                            RunService.Stepped:Wait()
                        until not coin:IsDescendantOf(Workspace) or coin.Name ~= "Coin_Server"
                        wait(1.8)
                    end
                else
                    wait(1.5)
                end
            end
        else
            while getgenv().Autofarm do
                wait()
                if LP.PlayerGui.MainGUI.Game.CashBag.Visible then
                    RootPart.CFrame = CFrame.new(TeleportDict["Lobby"])
                end
            end
        end
    end
})

autofarmTab:AddDropdown({
    Name = "Autofarm Method",
    Default = "XP",
    Options = {"XP", "Coins"},
    Callback = function(val)
        getgenv().AutofarmMethod = val
    end
})

local rolesTab = Window:MakeTab({
    Name = "ROLES",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Section = rolesTab:AddSection({
    Name = "SHERIFF"
})

rolesTab:AddToggle({
    Name = "Silent Aim",
    Default = false,
    Callback = function(state)
        getgenv().SheriffAim = state
    end
})

rolesTab:AddSlider({
    Name = "Accuracy",
    Min = 0,
    Max = 100,
    Default = 25,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "Accuracy",
    Callback = function(value)
        getgenv().GunAccuracy = tonumber(value) or 25
    end
})

rolesTab:AddToggle({
    Name = "Gun ESP",
    Default = false,
    Callback = function(state)
        getgenv().GunESP = state
    end
})

-- Auto-Shoot Features
local isAutoShootEnabled = false
local autoShootConnection

local function isSheriff()
    return LP:FindFirstChild("Role") and LP.Role.Value == "Sheriff"
end

local function findMurderer()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LP and player:FindFirstChild("Role") and player.Role.Value == "Murderer" then
            return player
        end
    end
    return nil
end

local function shootMurderer()
    if not isSheriff() then return end
    local murderer = findMurderer()
    if murderer then
        -- Replace with your own shooting mechanism
        LP.Character.HumanoidRootPart.CFrame = murderer.Character.HumanoidRootPart.CFrame
        wait(0.1)  -- Adjust timing as needed
        local gun = LP.Character:FindFirstChild("Gun")
        if gun then
            gun:Fire()
        end
    end
end

local function toggleAutoShoot(state)
    isAutoShootEnabled = state
    if isAutoShootEnabled then
        autoShootConnection = RunService.RenderStepped:Connect(function()
            shootMurderer()
        end)
        OrionLib:MakeNotification({
            Name = "Auto-Shoot Enabled",
            Content = "Auto-shoot is now enabled.",
            Time = 5
        })
    else
        if autoShootConnection then
            autoShootConnection:Disconnect()
        end
        OrionLib:MakeNotification({
            Name = "Auto-Shoot Disabled",
            Content = "Auto-shoot is now disabled.",
            Time = 5
        })
    end
end

rolesTab:AddToggle({
    Name = "Auto-Shoot",
    Default = false,
    Callback = function(state)
        toggleAutoShoot(state)
    end
})

OrionLib:Init()