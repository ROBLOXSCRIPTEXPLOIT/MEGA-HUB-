-- Load OrionLib
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/thanhdat4461/OrionMoblie/main/source'))()
local Window = OrionLib:MakeWindow({
    Name = "MEGA HUB-MURDER MYSTERY",
    HidePremium = false,
    IntroText = "MEGA HUB",
    SaveConfig = true,
    ConfigFolder = "MEGA HUB MM2"
})

-- Notifications
OrionLib:MakeNotification({
    Name = "HI!",
    Content = "THANK YOU FOR EXECUTING MY SCRIPT",
    Image = "rbxassetid://4483345998",
    Time = 5
})

OrionLib:MakeNotification({
    Name = "COPIED!",
    Content = "Clipboard text has been copied",
    Image = "rbxassetid://4483345998",
    Time = 5
})

setclipboard("Your text here")

-- Tabs
local EspTab = Window:MakeTab({ Name = "MAIN", Icon = "rbxassetid://4483345998" })
local MainTab = Window:MakeTab({ Name = "Main", Icon = "rbxassetid://4483345998" })
local PlayerTab = Window:MakeTab({ Name = "PLAYER", Icon = "rbxassetid://4483345998" })
local TpTab = Window:MakeTab({ Name = "TELEPORT", Icon = "rbxassetid://4483345998" })
local AutoFarmTab = Window:MakeTab({ Name = "AutoFarm", Icon = "rbxassetid://4483345998" })
local RolesTab = Window:MakeTab({ Name = "Role", Icon = "rbxassetid://4483345998" })

-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local LP = Players.LocalPlayer

-- Variables
local ESPEnabled = false
local infjumpenabled = false
local Murder, Sheriff, Hero
local roles = {}
local selectedPlayer = nil
local coinFarmEnabled = false

-- Helper Functions
local function CreateHighlight()
    for _, v in pairs(Players:GetPlayers()) do
        if v ~= LP and v.Character and not v.Character:FindFirstChildOfClass("Highlight") then
            local highlight = Instance.new("Highlight", v.Character)
            highlight.FillColor = Color3.fromRGB(0, 255, 0)
        end
    end
end

local function UpdateHighlights()
    for _, v in pairs(Players:GetPlayers()) do
        if v ~= LP and v.Character and v.Character:FindFirstChildOfClass("Highlight") then
            local highlight = v.Character:FindFirstChildOfClass("Highlight")
            if v.Name == Murder and IsAlive(v) then
                highlight.FillColor = Color3.fromRGB(255, 0, 0)
            elseif v.Name == Sheriff and IsAlive(v) then
                highlight.FillColor = Color3.fromRGB(0, 0, 255)
            elseif v.Name == Hero and IsAlive(v) and not IsAlive(Players[Sheriff]) then
                highlight.FillColor = Color3.fromRGB(255, 255, 0)
            else
                highlight.FillColor = Color3.fromRGB(0, 255, 0)
            end
        end
    end
end

local function IsAlive(player)
    local playerData = roles[player.Name]
    return playerData and not playerData.Killed and not playerData.Dead
end

local function StartESP()
    ESPEnabled = true
    CreateHighlight()
    RunService.RenderStepped:Connect(function()
        if ESPEnabled then
            roles = ReplicatedStorage:FindFirstChild("GetPlayerData", true):InvokeServer()
            for i, v in pairs(roles) do
                if v.Role == "Murderer" then
                    Murder = i
                elseif v.Role == 'Sheriff' then
                    Sheriff = i
                elseif v.Role == 'Hero' then
                    Hero = i
                end
            end
            UpdateHighlights()
        end
    end)
end

local function StopESP()
    ESPEnabled = false
    for _, v in pairs(Players:GetPlayers()) do
        if v.Character and v.Character:FindFirstChildOfClass("Highlight") then
            v.Character:FindFirstChildOfClass("Highlight"):Destroy()
        end
    end
end

local function TeleportToCoins()
    while coinFarmEnabled do
        local coins = Workspace:FindPartsInRegion3(workspace.CurrentCamera.CFrame:ToWorldSpace(workspace.CurrentCamera.CFrame), Vector3.new(1000, 1000, 1000), nil)
        for _, part in pairs(coins) do
            if part.Name == "Coin" and part:IsA("BasePart") then
                LP.Character:SetPrimaryPartCFrame(part.CFrame)
                wait(0.5)
                break
            end
        end
        wait(1)
    end
end

-- Tabs Functionality
MainTab:AddToggle({
    Name = "CTRL click tp",
    Default = false,
    Callback = function(state)
        getgenv().ClickTP = state
    end
})

MainTab:AddSlider({
    Name = "WalkSpeed",
    Min = 16,
    Max = 200,
    Default = 16,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "WalkSpeed",
    Callback = function(value)
        getgenv().WS = tonumber(value)
        if LP.Character and LP.Character:FindFirstChildOfClass("Humanoid") then
            LP.Character.Humanoid.WalkSpeed = value
        end
    end
})

MainTab:AddSlider({
    Name = "JumpPower",
    Min = 50,
    Max = 200,
    Default = 50,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "JumpPower",
    Callback = function(value)
        getgenv().JP = tonumber(value)
        if LP.Character and LP.Character:FindFirstChildOfClass("Humanoid") then
            LP.Character.Humanoid.JumpPower = value
        end
    end
})

MainTab:AddToggle({
    Name = "Fly",
    Default = false,
    Callback = function(state)
        getgenv().Flying = state
        if getgenv().Flying then
            StartFly() -- Define StartFly() function elsewhere
        else
            EndFly() -- Define EndFly() function elsewhere
        end
    end
})

MainTab:AddSlider({
    Name = "Fly Speed",
    Min = 20,
    Max = 150,
    Default = 50,
    Color = Color3.fromRGB(255, 255, 255),
    Increment = 1,
    ValueName = "FlySpeed",
    Callback = function(value)
        getgenv().FlySpeed = tonumber(value)
    end
})

MainTab:AddButton({
    Name = "Btools",
    Callback = function()
        if not LP.Backpack:FindFirstChildOfClass("HopperBin") then
            for _, toolType in pairs({"Clone", "GameTool", "Hammer", "Script", "Grab"}) do
                local tool = Instance.new("HopperBin", LP.Backpack)
                tool.BinType = toolType
            end
        end
    end
})

MainTab:AddButton({
    Name = "Godmode",
    Callback = function()
        GodMode() -- Define GodMode() function elsewhere
    end
})

MainTab:AddButton({
    Name = "Force Respawn",
    Callback = function()
        if LP.Character and LP.Character:FindFirstChildOfClass("Humanoid") then
            LP.Character:BreakJoints()
            LP.Character.Humanoid.BreakJointsOnDeath = false
        end
    end
})

MainTab:AddButton({
    Name = "Get All Emotes",
    Callback = function()
        require(EmoteModule).GeneratePage(EmoteList, Emotes, 'Free Emotes') -- Define these variables
    end
})

EspTab:AddToggle({
    Name = "PLAYER ESP",
    Default = false,
    Callback = function(value)
        if value then
            StartESP()
        else
            StopESP()
        end
    end
})

EspTab:AddTextbox({
    Name = "Hitbox",
    TextDisappear = true,
    Callback = function(Value)
        _G.HeadSize = tonumber(Value) or 2
        _G.Disabled = false

        RunService.RenderStepped:Connect(function()
            if not _G.Disabled then
                for _, player in ipairs(Players:GetPlayers()) do
                    if player.Name ~= LP.Name then
                        pcall(function()
                            if player.Character and player.Character:FindFirstChild("Head") then
                                player.Character.Head.Size = Vector3.new(_G.HeadSize, _G.HeadSize, _G.HeadSize)
                            end
                        end)
                    end
                end
            end
        end)
    end
})

AutoFarmTab:AddToggle({
    Name = "Coin Farm",
    Default = false,
    Callback = function(state)
        coinFarmEnabled = state
        if state then
            TeleportToCoins()
        end
    end
})

PlayerTab:AddDropdown({
    Name = "Select Player",
    Options = function()
        local players = {}
        for _, player in ipairs(Players:GetPlayers()) do
            if player.Name ~= LP.Name then
                table.insert(players, player.Name)
            end
        end
        return players
    end,
    Callback = function(selected)
        selectedPlayer = selected
    end
})

TpTab:AddButton({
    Name = "Teleport to Player",
    Callback = function()
        if selectedPlayer then
            local target = Players:FindFirstChild(selectedPlayer)
            if target and target.Character and target.Character.PrimaryPart then
                LP.Character:SetPrimaryPartCFrame(target.Character.PrimaryPart.CFrame)
            end
        end
    end
})

RolesTab:AddToggle({
    Name = "Auto Role",
    Default = false,
    Callback = function(state)
        getgenv().AutoRole = state
        if state then
            -- Logic to auto-assign roles or handle role-based functions
        end
    end
})

-- End of Script

OrionLib:Init()